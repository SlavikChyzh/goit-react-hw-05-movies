{"version":3,"file":"static/js/186.6b895bdb.chunk.js","mappings":"oOAIMA,EAAU,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAcC,EAAAA,EAAAA,SAAO,GAY3B,OAVAC,EAAAA,EAAAA,YAAU,WACJF,EAAYG,UACdH,EAAYG,SAAU,GACtBC,EAAAA,EAAAA,IAAkBT,EAAS,YAAYU,MAAK,SAAAC,GAC1CP,EAAWO,EACZ,IAGJ,GAAE,CAACX,KAGF,0BACE,wBACGG,EAAQS,OACPT,EAAQU,KAAI,SAAAF,GACV,IAAQG,EAAwBH,EAAxBG,GAAIC,EAAoBJ,EAApBI,OAAQC,EAAYL,EAAZK,QACpB,OACE,2BACE,0CAAgBD,MAChB,uBAAIC,MAFGF,EAKZ,KAED,wEAKT,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'Services/API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      fetchMovieReviews(movieId, '/reviews').then(response => {\n        setReviews(response);\n      });\n    }\n    return;\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length ? (\n          reviews.map(response => {\n            const { id, author, content } = response;\n            return (\n              <li key={id}>\n                <h3>{`Author: ${author}`}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport { Reviews };\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","firstRender","useRef","useEffect","current","fetchMovieReviews","then","response","length","map","id","author","content"],"sourceRoot":""}